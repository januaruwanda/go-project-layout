// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "975316@telkom.co.id"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/analytics/people-counting/daily-comparison": {
            "get": {
                "description": "Retrieves daily comparison data for people counting analytics.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get Daily Comparison Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/dates": {
            "get": {
                "description": "Retrieves a list of available dates for people counting data.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get Available Dates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/images": {
            "get": {
                "description": "Retrieves images related to people counting analytics.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get People Counting Images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/insert": {
            "post": {
                "description": "Inserts people counting data for analytics.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Insert People Counting Data",
                "parameters": [
                    {
                        "description": "People Counting Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/line-chart": {
            "get": {
                "description": "Retrieves line chart data for people counting analytics.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get Line Chart Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/total-in-out": {
            "get": {
                "description": "Retrieves the total number of people entering and exiting.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get Total In and Out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/analytics/people-counting/total-per-hour": {
            "get": {
                "description": "Retrieves the total number of people per hour for analytics.",
                "tags": [
                    "People Counting"
                ],
                "summary": "Get Total Per Hour",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/cctv/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetch all CCTV records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CCTV"
                ],
                "summary": "Get all CCTVs",
                "responses": {}
            }
        },
        "/api/cctv/insert": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new CCTV record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CCTV"
                ],
                "summary": "Insert a new CCTV",
                "parameters": [
                    {
                        "description": "CCTV payload",
                        "name": "CCTVInsert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.CCTVInsert"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/cctv/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a CCTV record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CCTV"
                ],
                "summary": "Update a CCTV",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CCTV ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CCTV payload",
                        "name": "CCTVUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.CCTVUpdate"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a CCTV record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CCTV"
                ],
                "summary": "Delete a CCTV",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CCTV ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/healthcheck": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "description": "Check if the API is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HealthCheck"
                ],
                "summary": "Health Check",
                "responses": {}
            }
        },
        "/api/object-store/upload": {
            "post": {
                "description": "Uploads a JPEG image file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectStore"
                ],
                "summary": "Upload an image to the object store",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/object-store/{imageName}": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "description": "Gets an image by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectStore"
                ],
                "summary": "Retrieve an image from the object store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the image file",
                        "name": "imageName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Authenticate user and retrieve JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User login payload",
                        "name": "UserCredentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.UserCredentials"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration payload",
                        "name": "UserCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.UserCreate"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/vehicle-counting/dates": {
            "get": {
                "description": "Retrieve the list of available dates for the selected camera",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get list of available dates for vehicle data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/insert": {
            "post": {
                "description": "Insert new vehicle count data into the system",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Insert vehicle count data",
                "parameters": [
                    {
                        "description": "Vehicle count data",
                        "name": "vehicle_count",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.VehicleCountingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/line-chart-total": {
            "get": {
                "description": "Retrieve the line chart data for the total number of vehicles within a date range",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get line chart data for total vehicles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "up or down",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/max-range": {
            "get": {
                "description": "Retrieve the maximum date range available for vehicle data",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get maximum date range available",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Route flag",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/smp": {
            "get": {
                "description": "Retrieve detailed SMP data for a given date range",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get detailed SMP (Passenger Car Equivalent) data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pagi/siang/sore",
                        "name": "peak",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "up/down",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/total-in-out": {
            "get": {
                "description": "Retrieve the total number of vehicles in and out for a given date range",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get total vehicles in and out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Route flag",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/total-peak": {
            "get": {
                "description": "Retrieve the total peak hour vehicle count for a given date range",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get total peak vehicle data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "up/down",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/vehicle-counting/total-vehicles": {
            "get": {
                "description": "Retrieve the total number of vehicles by camera and a specified date range",
                "tags": [
                    "Vehicle Counting"
                ],
                "summary": "Get total vehicle counts by camera and date range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Route flag",
                        "name": "flag_rute",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the camera",
                        "name": "id_camera",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "presenters.CCTVInsert": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "presenters.CCTVUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "presenters.UserCreate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "presenters.UserCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "presenters.VehicleCountingInput": {
            "type": "object",
            "properties": {
                "bicycle": {
                    "type": "integer"
                },
                "bus": {
                    "type": "integer"
                },
                "car": {
                    "type": "integer"
                },
                "datetime": {
                    "type": "string"
                },
                "flag_rute": {
                    "type": "string"
                },
                "id_camera": {
                    "type": "integer"
                },
                "motorcycle": {
                    "type": "integer"
                },
                "truck": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "\"JWT Bearer token required for authentication\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "BigVision Operation API",
	Description:      "BigVision Operation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
