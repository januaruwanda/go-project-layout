basePath: /
definitions:
  presenters.CCTVInsert:
    properties:
      address:
        type: string
      city:
        type: string
      location:
        type: string
      name:
        type: string
      project_name:
        type: string
    type: object
  presenters.CCTVUpdate:
    properties:
      address:
        type: string
      city:
        type: string
      location:
        type: string
      name:
        type: string
      project_name:
        type: string
    type: object
  presenters.UserCreate:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  presenters.UserCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  presenters.VehicleCountingInput:
    properties:
      bicycle:
        type: integer
      bus:
        type: integer
      car:
        type: integer
      datetime:
        type: string
      flag_rute:
        type: string
      id_camera:
        type: integer
      motorcycle:
        type: integer
      truck:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: 975316@telkom.co.id
    name: API Support
  description: BigVision Operation
  license:
    name: MIT
    url: https://opensource.org/license/mit
  termsOfService: http://swagger.io/terms/
  title: BigVision Operation API
  version: "1.0"
paths:
  /api/analytics/people-counting/daily-comparison:
    get:
      description: Retrieves daily comparison data for people counting analytics.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      responses: {}
      summary: Get Daily Comparison Data
      tags:
      - People Counting
  /api/analytics/people-counting/dates:
    get:
      description: Retrieves a list of available dates for people counting data.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      responses: {}
      summary: Get Available Dates
      tags:
      - People Counting
  /api/analytics/people-counting/images:
    get:
      description: Retrieves images related to people counting analytics.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      - description: Date (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      responses: {}
      summary: Get People Counting Images
      tags:
      - People Counting
  /api/analytics/people-counting/insert:
    post:
      description: Inserts people counting data for analytics.
      parameters:
      - description: People Counting Data
        in: body
        name: data
        required: true
        schema:
          type: object
      responses: {}
      summary: Insert People Counting Data
      tags:
      - People Counting
  /api/analytics/people-counting/line-chart:
    get:
      description: Retrieves line chart data for people counting analytics.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      - description: Date (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      responses: {}
      summary: Get Line Chart Data
      tags:
      - People Counting
  /api/analytics/people-counting/total-in-out:
    get:
      description: Retrieves the total number of people entering and exiting.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      - description: Date (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      responses: {}
      summary: Get Total In and Out
      tags:
      - People Counting
  /api/analytics/people-counting/total-per-hour:
    get:
      description: Retrieves the total number of people per hour for analytics.
      parameters:
      - description: Camera ID
        in: query
        name: id_camera
        required: true
        type: string
      - description: Date (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      responses: {}
      summary: Get Total Per Hour
      tags:
      - People Counting
  /api/cctv/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a CCTV record by ID
      parameters:
      - description: CCTV ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a CCTV
      tags:
      - CCTV
    put:
      consumes:
      - application/json
      description: Update a CCTV record by ID
      parameters:
      - description: CCTV ID
        in: path
        name: id
        required: true
        type: integer
      - description: CCTV payload
        in: body
        name: CCTVUpdate
        required: true
        schema:
          $ref: '#/definitions/presenters.CCTVUpdate'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a CCTV
      tags:
      - CCTV
  /api/cctv/all:
    get:
      consumes:
      - application/json
      description: Fetch all CCTV records
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get all CCTVs
      tags:
      - CCTV
  /api/cctv/insert:
    post:
      consumes:
      - application/json
      description: Create a new CCTV record
      parameters:
      - description: CCTV payload
        in: body
        name: CCTVInsert
        required: true
        schema:
          $ref: '#/definitions/presenters.CCTVInsert'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Insert a new CCTV
      tags:
      - CCTV
  /api/healthcheck:
    get:
      consumes:
      - application/json
      description: Check if the API is running
      produces:
      - application/json
      responses: {}
      security:
      - none: []
      summary: Health Check
      tags:
      - HealthCheck
  /api/object-store/{imageName}:
    get:
      description: Gets an image by its name
      parameters:
      - description: Name of the image file
        in: path
        name: imageName
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - none: []
      summary: Retrieve an image from the object store
      tags:
      - ObjectStore
  /api/object-store/upload:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a JPEG image file
      parameters:
      - description: Image file to upload
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      summary: Upload an image to the object store
      tags:
      - ObjectStore
  /api/user/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and retrieve JWT token
      parameters:
      - description: User login payload
        in: body
        name: UserCredentials
        required: true
        schema:
          $ref: '#/definitions/presenters.UserCredentials'
      produces:
      - application/json
      responses: {}
      summary: Login user
      tags:
      - User
  /api/user/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration payload
        in: body
        name: UserCreate
        required: true
        schema:
          $ref: '#/definitions/presenters.UserCreate'
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - User
  /api/vehicle-counting/dates:
    get:
      description: Retrieve the list of available dates for the selected camera
      parameters:
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get list of available dates for vehicle data
      tags:
      - Vehicle Counting
  /api/vehicle-counting/insert:
    post:
      description: Insert new vehicle count data into the system
      parameters:
      - description: Vehicle count data
        in: body
        name: vehicle_count
        required: true
        schema:
          $ref: '#/definitions/presenters.VehicleCountingInput'
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Insert vehicle count data
      tags:
      - Vehicle Counting
  /api/vehicle-counting/line-chart-total:
    get:
      description: Retrieve the line chart data for the total number of vehicles within
        a date range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: date
        required: true
        type: string
      - description: up or down
        in: query
        name: flag_rute
        required: true
        type: string
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get line chart data for total vehicles
      tags:
      - Vehicle Counting
  /api/vehicle-counting/max-range:
    get:
      description: Retrieve the maximum date range available for vehicle data
      parameters:
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      - description: Route flag
        in: query
        name: flag_rute
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get maximum date range available
      tags:
      - Vehicle Counting
  /api/vehicle-counting/smp:
    get:
      description: Retrieve detailed SMP data for a given date range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: date
        required: true
        type: string
      - description: pagi/siang/sore
        in: query
        name: peak
        required: true
        type: string
      - description: up/down
        in: query
        name: flag_rute
        required: true
        type: string
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get detailed SMP (Passenger Car Equivalent) data
      tags:
      - Vehicle Counting
  /api/vehicle-counting/total-in-out:
    get:
      description: Retrieve the total number of vehicles in and out for a given date
        range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: start_date
        required: true
        type: string
      - description: End date in YYYY-MM-DD format
        in: query
        name: end_date
        required: true
        type: string
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      - description: Route flag
        in: query
        name: flag_rute
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get total vehicles in and out
      tags:
      - Vehicle Counting
  /api/vehicle-counting/total-peak:
    get:
      description: Retrieve the total peak hour vehicle count for a given date range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: date
        required: true
        type: string
      - description: up/down
        in: query
        name: flag_rute
        required: true
        type: string
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get total peak vehicle data
      tags:
      - Vehicle Counting
  /api/vehicle-counting/total-vehicles:
    get:
      description: Retrieve the total number of vehicles by camera and a specified
        date range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: date
        required: true
        type: string
      - description: Route flag
        in: query
        name: flag_rute
        required: true
        type: string
      - description: ID of the camera
        in: query
        name: id_camera
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get total vehicle counts by camera and date range
      tags:
      - Vehicle Counting
security:
- BearerAuth: []
securityDefinitions:
  BearerAuth:
    description: '"JWT Bearer token required for authentication"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
